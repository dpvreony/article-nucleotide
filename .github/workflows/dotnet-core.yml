name: .NET Core

on:
  push:
    branches: [ main ]
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches: [ main ]

jobs:
  build:
    runs-on: windows-latest
    outputs:
      nbgv: ${{ steps.nbgv.outputs.SemVer2 }}
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      DOTNET_NOLOGO: true
      DOTNET_GENERATE_ASPNET_CERTIFICATE: false
      solutionpath: src/Article.Nucleotide.sln
      unittestprojectpath: src/Article.Nucleotide.UnitTests/Article.Nucleotide.UnitTests.csproj
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        

    - name: Verify the ref context
      run: echo 'Ref Context is ${{ github.ref }}'

    - name: Verify the head ref context
      run: echo 'Head Ref Context is ${{ github.head_ref }}'

    - name: Setup .NET Core 3.1
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 3.1.x

    - name: Setup .NET 5
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 5.0.x

    # This mitigates an issue with websdk projects loading analyzers from old packages.
    - name: Cleanup nuget local storage
      run: dotnet nuget locals all --clear

    - name: Install dotnet tools
      run: |
        dotnet tool install --global dotMorten.OmdGenerator
        dotnet tool install --global ConfigValidate
        dotnet tool install --global dotnet-outdated-tool
        dotnet tool install --global snitch
        dotnet tool install --global dotnet-sonarscanner
        dotnet tool install --global JetBrains.ReSharper.GlobalTools

    - name: Prepare Artifact Directory
      run: |
        mkdir artifacts
        mkdir artifacts\nupkg
        mkdir artifacts\outdated
        mkdir artifacts\snitch
        mkdir artifacts\omd
        mkdir artifacts\docfx

    - name: Restore Packages
      run: |
        dotnet restore ${{ env.solutionpath }} /bl:artifacts\\binlog\\restore.binlog

    - name: List Deprecated Packages
      run: |
        dotnet list ${{ env.solutionpath }} package --deprecated
        # TODO: pipe to text file, echo text file and error level fail build if not empty file?

    - name: List Vulnerable Packages
      run: |
        dotnet list ${{ env.solutionpath }} package --vulnerable
        # TODO: pipe to text file, echo text file and error level fail build if not empty file?

    - name: Run Build
      run: |
        dotnet build ${{ env.solutionpath }} --configuration Release --no-restore /bl:artifacts\\binlog\\build.binlog /p:ContinuousIntegrationBuild=true 

    - name: Run Unit Tests
      run: |
        dotnet test ${{ env.unittestprojectpath }} --configuration Release --no-build /bl:artifacts\\binlog\\unittest.binlog --nologo --blame-hang-timeout 60000 --results-directory artifacts\opencover --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover

    - name: Upload Code Coverage
      shell: bash
      run: |
        echo $PWD
        bash <(curl -s https://codecov.io/bash) -X gcov -X coveragepy -t ${{ env.CODECOV_TOKEN }} -s '$PWD/artifacts/opencover' -f '*.xml'
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

    - name: Produce Nuget Packages
      run: |
        dotnet pack ${{ env.solutionpath }} --configuration Release --no-build /bl:artifacts\\binlog\\pack.binlog --nologo /p:PackageOutputPath=..\..\artifacts\nuget /p:ContinuousIntegrationBuild=true

    - name: List outdated packages
      run: |
        dotnet outdated -o artifacts\outdated\outdated.json src

    - name: Run Resharper Duplicate Code Finder
      run: |
        jb dupfinder ${{ env.solutionpath }} -o=artifacts\dupfinder\report.xml

# only store binlog on failure      
    - name: store binlogs
      if: startsWith(github.head_ref, 'dependabot/') != true
      uses: actions/upload-artifact@v3
      with:
        name: binlogs
        path: artifacts/binlog
        
    - name: store docfx
      if: startsWith(github.head_ref, 'dependabot/') != true
      uses: actions/upload-artifact@v3
      with:
        name: docfx
        path: artifacts/docfx
        
    - name: store nuget packages
      if: startsWith(github.head_ref, 'dependabot/') != true
      uses: actions/upload-artifact@v3
      with:
        name: nuget
        path: artifacts/nuget
        
    - name: store omd
      if: startsWith(github.head_ref, 'dependabot/') != true
      uses: actions/upload-artifact@v3
      with:
        name: omd
        path: artifacts/omd
        
    - name: store outdated
      if: startsWith(github.head_ref, 'dependabot/') != true
      uses: actions/upload-artifact@v3
      with:
        name: outdated
        path: artifacts/outdated
        
    - name: store snitch
      if: startsWith(github.head_ref, 'dependabot/') != true
      uses: actions/upload-artifact@v3
      with:
        name: snitch
        path: artifacts/snitch

    - name: store resharper dupfinder
      if: startsWith(github.head_ref, 'dependabot/') != true
      uses: actions/upload-artifact@v3
      with:
        name: dupfinder
        path: artifacts/dupfinder
